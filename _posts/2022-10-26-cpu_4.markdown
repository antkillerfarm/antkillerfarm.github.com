---
layout: post
title: CPU(四), NVLink
category: Chip 
---

* toc
{:toc}

# CPU

![](/images/img4/In_Chip_Bus.jpg)

https://zhuanlan.zhihu.com/p/32216294

破茧化蝶，从Ring Bus到Mesh网络，CPU片内总线的进化之路

---

Engineering Change Order

https://zhuanlan.zhihu.com/p/20914909

IC科普文：ECO的那些事

---

Register Transfer Level

https://blog.csdn.net/hqzl225411/article/details/117819843

RTL概念与常用RTL建模

---

https://mp.weixin.qq.com/s/Cij_95iLbAm0AEtrSb72_A

关于CPU科普，这篇说得最详细

https://zhuanlan.zhihu.com/p/29743431

CPU制造的那些事之一：i7和i5其实是孪生兄弟！？

https://zhuanlan.zhihu.com/p/29767262

CPU制造的那些事之二：Die的大小和良品率

https://zhuanlan.zhihu.com/p/31848803

为什么CPU越来越多地采用硅脂而不是焊锡散热？

https://zhuanlan.zhihu.com/p/27624654

CPU风扇停转后会发生什么？CPU凭什么烧不坏

https://zhuanlan.zhihu.com/p/30409360

为什么CPU的频率止步于4G?我们触到频率天花板了吗？

https://zhuanlan.zhihu.com/p/33145828

什么是Speculative Execution？为什么要有它？

http://mp.weixin.qq.com/s/sshhUppVPP6qM7LH1V3nSQ

四位计算机的原理及其实现

https://zhuanlan.zhihu.com/p/33579054

Reset重启后发生了什么？它和关机后再开机有什么区别？

https://zhuanlan.zhihu.com/p/34091597

ARM攒机指南-网络篇

https://zhuanlan.zhihu.com/p/34223088

如何进入BIOS？

https://zhuanlan.zhihu.com/p/30565679

人工智能技术热潮中，是否存在破解苹果A11处理器的可能？

https://mp.weixin.qq.com/s/UWpp2r0_yDxNyJk-cldVyA

处理器高危漏洞无人幸免？树莓派：我们不受影响

>最近的Meltdown和Spectre漏洞被炒的沸沸扬扬，然而能用python语言讲述复杂的CPU计算原理，这是该文的一大创见。

https://mp.weixin.qq.com/s/v_BsfSFp-LwiCOFKaMIS_g

后摩尔时代，如何给你的CPU减负？

https://mp.weixin.qq.com/s/gpfMOW7gzVa2HhYOlDy2nQ

从Intel和ARM争霸战，看看做芯片有多难

https://zhuanlan.zhihu.com/p/43626576

关于芯片，这篇说得最详细！

https://zhuanlan.zhihu.com/p/43768401

如何像搭积木一样构建CPU？Intel和AMD都是怎么做的？

https://zhuanlan.zhihu.com/p/48593932

CPU底部的小块是干什么用的？为什么CPU这么多电源引脚？

https://zhuanlan.zhihu.com/p/51145563

TDP是CPU的功耗吗？TDP是固定不变的吗？

https://mp.weixin.qq.com/s/gzE46SzANLaYaXdLVEBRaA

专家揭秘“低功耗芯片设计”真相

https://mp.weixin.qq.com/s/pFBhnjtXi8uNMGjYFeSfow

芯片行业都难在哪儿？这篇说得最详细！

https://mp.weixin.qq.com/s/nDWJS4rfWsqeVgJQbAYQ6w

一文看懂IGBT(绝缘栅双极型晶体管）

https://mp.weixin.qq.com/s/4_eGNtXULAdK9UzsP1mwKA

IGBT的现状与发展

https://mp.weixin.qq.com/s/TG6C4P-DvhRTJ2FoU8PFtw

IGBT基础与运用知识

https://zhuanlan.zhihu.com/p/56864499

CPU是怎么调节输入电压的？为什么要这么做？

https://mp.weixin.qq.com/s/LreWWlXAQL-dqQBCk93soQ

解读两大精简指令集：RISC-V和MIPS

https://mp.weixin.qq.com/s/JLg6sEwCxTMpo2nyCt50qg

指令集——CPU芯片江湖中的门派标志

https://mp.weixin.qq.com/s/7gXK6Qv9gLMkYtXw9oz9Sg

一文看懂指令集是什么

https://mp.weixin.qq.com/s/p7FKgx-sFGDJF0y4IGWvyg

CPU指令集架构科普

https://mp.weixin.qq.com/s/5uie8Ci5dK_wy54Z70Gklg

RISC-V精简到何种程度？能省的都省了！

https://mp.weixin.qq.com/s/JNCC3C3Sq0Hzk_5VBcivng

RISC-V有何特别之处？

https://mp.weixin.qq.com/s/26se041cc9aBRw16kvPPjA

芯片制造新模式--像搭积木一样造芯片

https://mp.weixin.qq.com/s/lz6EoLiLtPtWFMG1FJCuQw

化合物半导体的机遇

https://mp.weixin.qq.com/s/tTtySk3u6m2BGUkDto5Ojw

可重构芯片的方法学原理

https://mp.weixin.qq.com/s/RkRZX_scr__Q_mLPhaaWAA

AMD Zen 2处理器架构为何要如此设计？

https://mp.weixin.qq.com/s/dRv4xWV8laCYBaZ0DwOC3A

如何从零开始设计一颗芯片？

https://mp.weixin.qq.com/s/eAzdtKvfw7EVz5Ax3nXeZg

自己动手设计专用处理器

https://mp.weixin.qq.com/s/NfNJVoAC5aW1sgToAmYsGw

3nm芯片终结者

https://mp.weixin.qq.com/s/o8C6n-ZRw3vFS8E-hikXJQ

移动的王者：深入分析ARM最强处理器Cortex A77

https://www.cnblogs.com/f-ck-need-u/p/11141636.html

关于CPU的一些基本知识总结

https://mp.weixin.qq.com/s/vTOGmcahRxQBH8RgkTJ2GA

中文系同学都能听懂的集成电路设计流程

https://mp.weixin.qq.com/s/O-2ecxYVOgEfRuwEoS7gRA

Fab的那些事儿

>Fab的全称叫Fabrication，也就是集成电路制造的工厂、车间。

https://mp.weixin.qq.com/s/_NcQ-PxNpEtpYdo450Uukg

半导体材料全球格局

https://mp.weixin.qq.com/s/QwE_VTEUS9kGDDrHlzPYmg

硅片为什么不是方的？

https://zhuanlan.zhihu.com/p/32378843

ARM攒机指南-汽车篇

https://mp.weixin.qq.com/s/Hq9hzkyfGcCQa_FfzSDoRg

5nm工艺节点以后，半导体器件的发展方向

https://zhuanlan.zhihu.com/p/66263349

为什么内存和闪存制程比CPU低？它们现在都在什么节点？

https://zhuanlan.zhihu.com/p/114448236

什么是Win10的“现代待机”？为什么它未来会越来越重要？这篇文章部分解释了我的第一个平板为什么那么耗电。

https://mp.weixin.qq.com/s/J7RlmvU7JY1J8rV-eqjQ2A

浅谈多核心CPU和SoC芯片及其工作原理

https://mp.weixin.qq.com/s/Lnrlv7JcrOSwbnDweYf1Yg

片上系统设计案例分析-Xbox主机

https://zhuanlan.zhihu.com/p/86432216

Microcode是什么？它为什么能修正CPU硬件错误？

https://www.zhihu.com/question/503287789

当两个CPU核心要求读写同一内存地址时，其后果是未定义行为吗？

https://mp.weixin.qq.com/s/Kake5sQm79L2j_uDqKfznQ

在《我的世界》里从零打造一台计算机有多难？复旦本科生大神花费了一年心血

https://www.zhihu.com/question/562917157

为什么intel的7nm工艺的处理器没有像amd的那样积热那么严重?

https://www.zhihu.com/question/552957041

书上说代码地址总是从0x400000开始，但是查看编译好的elf头起始地址是从0开始的，这是为什么？

# NVLink

NVLink技术提供比PCIe 3更高的带宽与更多的链路，并可提升多GPU和多GPU/CPU系统配置的可扩展性。

SXM是Nvidia的双插槽卡设计，与PCIe卡不同，它不需要连接电源。

---

![](/images/img4/PCIE.jpg)

官网：

https://www.nvidia.cn/data-center/nvlink/

![](/images/img3/nvlink.png)

Tesla V100中以NVLink连接的GPU至GPU和GPU至CPU通信。

![](/images/img3/nvlink_2.png)

在DGX-1V服务器中，混合立体网络拓扑使用NVLink连接8个Tesla V100加速器。每个GPU有6条nvlink通道，总带宽高达300GB/s。

从上图可以看到，即使每个GPU拥有6条nvlink通道，仍然无法做到“全连接”（即任意两个GPU之间存在双向通道）。这就引出了下一个更加疯狂的技术：nvswitch。

![](/images/img3/nvswitch.png)

NV Switch是首款节点交换架构，可支持单个服务器节点中16个全互联的GPU，并可使全部8个GPU对分别以300GB/s的惊人速度进行同时通信。这16个全互联的GPU还可作为单个大型加速器，拥有0.5 TB统一显存空间和2 PetaFLOPS计算性能。

https://zhuanlan.zhihu.com/p/35470532

全球最大GPU背后的秘密：NVSwitch如何实现NVIDIA DGX-2的超强功力？

---

NVLink和NV Switch的关系：

NVLink是一种协议。

NV Switch是NVLink协议的芯片化实现。

GPU core和NV Switch如果都实现了NVLink协议的话，则它们之间可以通过NVLink协议进行通信。

未来解决带宽问题的两大法宝，一个靠内存厂给提供的牙膏继续叠单GPU芯片的带宽，另一个就是目前这些形态更高密度的通过nvlink组合起来，从而创造一个大的“一个GPU”。

就这个搞一个大的“一个GPU”而言，又有很多种可能的扩展形态

- 双GPU卡
- 主板堆8卡
- 垂直堆8个刀片
- 网络组更多机柜

其实也就对应了nvlink的多种形态

- nvlink c2c
- nvlink
- nvlink bridge
- nvlink network

---

![](/images/img5/Nvidia_Grace_Hopper.jpg)

https://zhuanlan.zhihu.com/p/600638633

Nvidia Grace Hopper超级芯片架构解读（一）

https://zhuanlan.zhihu.com/p/601072219

Nvidia Grace Hopper超级芯片架构解读（二）

---

单单从信号线路数量来说，x16的PCIe和x2的NVLink是相同的，都是32对差分线。x2的NVLink 3.0双向带宽是100 GB/s，比PCIe 5.0 x16的126 GB/s要低。

这么高的带宽，数据传输功耗是一个不可忽略的重要因素，NV能做到x18的NVLink，不代表其它厂家可以轻松实现x144的PCIe。

大概在2017年的hotchips上，Intel给出的一份PPT上，PCB上每传输1bit数据的参考功耗是20 pJ（1e-12焦耳），按这个功耗计算，NVLink 3.0 x18的7200 Gbit/s意味着单单是信号传输就要消耗144W功耗，这显然是难以接受的。2019年NV发表过一份1.17 pJ/bit的论文，虽然因为应用环境不同，不能直接对比说NV的技术使得传输功耗不到6%，但还是可以从侧面猜测一下NV的技术水平。

https://www.zhihu.com/question/546809864

为什么NVlink能够实现比PCIe更高的传输带宽？

---

https://zhuanlan.zhihu.com/p/623060064

什么是NVLink？

## NCCL

NCCL是Nvidia Collective multi-GPU Communication Library的简称，它是一个实现多GPU的collective communication通信库，可以在PCIe、Nvlink、InfiniBand上实现较高的通信速度。

InfiniBand（直译为“无限带宽”技术，缩写为IB）是一个用于高性能计算的计算机网络通信标准，它具有极高的吞吐量和极低的延迟，用于计算机与计算机之间的数据互连。相当于是面向HPC的以太网的替代品。

Mellanox Technologies是一家InfiniBand制造商，于2020年被Nvidia收购。

官方文档：

https://docs.nvidia.com/deeplearning/nccl/user-guide/docs/index.html

nccl v1：支持单机多卡通信，不支持多机通信。

nccl v2：支持多机通信。

参考：

https://www.zhihu.com/question/63219175

如何理解Nvidia英伟达的Multi-GPU多卡通信框架NCCL？

https://zhuanlan.zhihu.com/p/364816069

NCCL--GPU的collective communication通信技术

https://blog.csdn.net/TH_NUM/article/details/81479317

nvidia-nccl学习笔记

https://developer.nvidia.com/blog/fast-multi-gpu-collectives-nccl/

Fast Multi-GPU collectives with NCCL

https://www.zhihu.com/question/422501188

什么是InfiniBand，它和以太网的区别在于什么？

## 参考

https://www.infoq.cn/article/3D4MsRVS8ZOtGCj7*krT

GPU通信技术初探

https://zhuanlan.zhihu.com/p/67785062

不止显卡！这些硬件因素也影响着你的深度学习模型性能
